services:
  postgres:
    image: postgres:18-alpine
    container_name: psychologist_postgres_dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
      POSTGRES_DB: ${POSTGRES_DB:-psychology_bot_dev}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network-dev

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      target: development
    container_name: psychologist_backend_dev
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-me-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-60}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-30}
      DEBUG: "true"
    volumes:
      - ./apps/backend:/app
      - backend_cache:/app/.pytest_cache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network-dev
    command: >
      sh -c "
        pip install debugpy &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  telegram-bot:
    build:
      context: ./apps/telegram-bot
      dockerfile: Dockerfile
      target: development
    container_name: psychologist_telegram_bot_dev
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      BACKEND_API_URL: http://backend:8000
      DATABASE_URL: ${DATABASE_URL}
      DEBUG: "true"
    volumes:
      - ./apps/telegram-bot:/app
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network-dev

  # Опциональный PgAdmin для удобной работы с БД
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: psychologist_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network-dev

volumes:
  postgres_dev_data:
    driver: local
  backend_cache:
    driver: local

networks:
  app-network-dev:
    driver: bridge
