"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ .env —Ñ–∞–π–ª–∞.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/update_admin.py
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.append(str(Path(__file__).parent.parent))

from sqlalchemy import select, update
from app.core.database import AsyncSessionLocal
from app.models.user import User
from app.core.security import get_password_hash
from app.core.config import settings


async def update_admin():
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    async with AsyncSessionLocal() as session:
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞
        result = await session.execute(
            select(User).where(User.role == "ADMIN")
        )
        admin = result.scalar_one_or_none()

        if not admin:
            print("‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: alembic upgrade head")
            return

        print(f"üìå –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {admin.email}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        old_email = admin.email
        admin.email = settings.ADMIN_EMAIL
        admin.name = settings.ADMIN_NAME
        admin.hashed_password = get_password_hash(settings.ADMIN_PASSWORD)
        admin.is_active = True

        await session.commit()

        print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω!")
        print(f"   Email: {old_email} ‚Üí {admin.email}")
        print(f"   –ò–º—è: {admin.name}")
        print(f"   –ü–∞—Ä–æ–ª—å: –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑ ADMIN_PASSWORD")


if __name__ == "__main__":
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    print(f"   –ò–∑ .env: ADMIN_EMAIL={settings.ADMIN_EMAIL}")
    print(f"   –ò–∑ .env: ADMIN_NAME={settings.ADMIN_NAME}")
    print()

    asyncio.run(update_admin())
